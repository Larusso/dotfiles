#!/usr/bin/env bash
#
# Bootstrap program for the system.
#
set -e

# Detect the platform (similar to $OSTYPE)
os="$(uname)"
distro="unknown"

# Color variables
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'
# Clear the color after that
clear='\033[0m'

class=$1

case $os in
  'Linux')
    os='Linux'
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        distro=$ID
    fi
    ;;
  'WindowsNT')
    os='Windows'
    ;;
  'Darwin') 
    os='macOS'
    ;;
  *) ;;
esac
echo -e "${green}::${clear} detected OS ${os} and distro ${distro}"

# install yay if missing
function install_paru {
    if ! command -v paru >/dev/null 2>&1; then
        echo -e "${blue}::${clear} installing puru dependencies ..."
        sudo pacman -S --needed git base-devel

        echo -e "${blue}::${clear} installing paru ..."
        git clone https://aur.archlinux.org/paru.git
        cd paru
        makepkg -si
    else
        echo -e "${green}::${clear} paru already installed"
    fi
}

# install homebrew if missing
function init_homebrew {
    echo -e "${blue}::${clear} init homebrew ..."

    if ! command -v brew >/dev/null 2>&1; then
        echo -e "${blue}::${clear} installing homebrew ..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    else
        echo -e "${green}::${clear} brew already installed"
    fi
}

# setup yadm class
function set_yadm_class {
    if [ -z ${class+x} ]; then
        echo -e "${green}::${clear} no yadm class set"
    else
        echo -e "${blue}::${clear} set yadm class to '${class}'"
        $1 config local.class "${class}"
    fi
}

# bootstrap yadm
function init_yadm {
    echo -e "${blue}::${clear} init yadm dotfile manager ..."
    yadm_tmp=$(mktemp -d -t yadm-XXXXXXX)

    if ! command -v brew >/dev/null 2>&1; then
        echo -e "${blue}::${clear} installing yadm..."

        yadm="$yadm_tmp/yadm"
        PATH=$yadm_tmp:$PATH

        curl -fLo $yadm https://github.com/TheLocehiliosan/yadm/raw/master/yadm
        chmod a+x $yadm
    else
        echo -e "${green}::${clear} yadm already installed"
        yadm="yadm"
    fi

    if [ -d "$HOME/.local/share/yadm/repo.git" ]; then
        echo -e "${green}::${clear} yadm repo already setup"
        set_yadm_class "$yadm"
        $yadm pull
    else
        $yadm init -f
        set_yadm_class "$yadm"
        $yadm remote add origin https://github.com/Larusso/dotfiles.git
        $yadm pull origin master --set-upstream
        $yadm alt
        $yadm bootstrap
    fi
    rm -fr $yadm_tmp
}

# install zsh
function install_zsh {
    echo -e "${blue}::${clear} init zsh ..."
    if ! command -v zsh >/dev/null 2>&1; then
        echo -e "${blue}::${clear} installing zsh ..."
        if [ "$os" = "macOS" ]; then
            /usr/local/bin/brew install zsh    
        elif [ "$os" = "Linux" ] && [ "$distro" = "arch"]; then
            paru -S zsh
        fi
    else
        echo -e "${green}::${clear} zsh already installed"
    fi
}

if [ "$os" = "macOS" ]; then
    init_homebrew
elif [ "$os" = "Linux" ] && [ "$distro" = "arch"]; then
    install_paru
fi

install_zsh
init_yadm
